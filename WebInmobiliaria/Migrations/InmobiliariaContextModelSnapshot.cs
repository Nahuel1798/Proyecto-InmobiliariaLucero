// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebInmobiliaria.Migrations
{
    [DbContext(typeof(InmobiliariaContext))]
    partial class InmobiliariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaTerminacionAnticipada")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("int");

                    b.Property<int?>("InmuebleId1")
                        .HasColumnType("int");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<int?>("InquilinoId1")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoMensual")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("MontoMulta")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsuarioAltaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioBajaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InmuebleId");

                    b.HasIndex("InmuebleId1");

                    b.HasIndex("InquilinoId");

                    b.HasIndex("InquilinoId1");

                    b.HasIndex("UsuarioAltaId");

                    b.HasIndex("UsuarioBajaId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Inmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ambientes")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitud")
                        .HasColumnType("double");

                    b.Property<double>("Longitud")
                        .HasColumnType("double");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoInmuebleId")
                        .HasColumnType("int");

                    b.Property<string>("Uso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("TipoInmuebleId");

                    b.ToTable("Inmuebles");
                });

            modelBuilder.Entity("Inquilino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anulado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("ContratoId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NumeroPeriodo")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UsuarioAltaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioAnulacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("ContratoId1");

                    b.HasIndex("UsuarioAltaId");

                    b.HasIndex("UsuarioAnulacionId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("TipoInmueble", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposInmueble");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Contrato", b =>
                {
                    b.HasOne("Inmueble", "Inmueble")
                        .WithMany()
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inmueble", null)
                        .WithMany("Contratos")
                        .HasForeignKey("InmuebleId1");

                    b.HasOne("Inquilino", "Inquilino")
                        .WithMany()
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inquilino", null)
                        .WithMany("Contratos")
                        .HasForeignKey("InquilinoId1");

                    b.HasOne("Usuario", "UsuarioAlta")
                        .WithMany()
                        .HasForeignKey("UsuarioAltaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Usuario", "UsuarioBaja")
                        .WithMany()
                        .HasForeignKey("UsuarioBajaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Inmueble");

                    b.Navigation("Inquilino");

                    b.Navigation("UsuarioAlta");

                    b.Navigation("UsuarioBaja");
                });

            modelBuilder.Entity("Inmueble", b =>
                {
                    b.HasOne("Propietario", "Propietario")
                        .WithMany("Inmuebles")
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TipoInmueble", "TipoInmueble")
                        .WithMany("Inmuebles")
                        .HasForeignKey("TipoInmuebleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propietario");

                    b.Navigation("TipoInmueble");
                });

            modelBuilder.Entity("Pago", b =>
                {
                    b.HasOne("Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Contrato", null)
                        .WithMany("Pagos")
                        .HasForeignKey("ContratoId1");

                    b.HasOne("Usuario", "UsuarioAlta")
                        .WithMany()
                        .HasForeignKey("UsuarioAltaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Usuario", "UsuarioAnulacion")
                        .WithMany()
                        .HasForeignKey("UsuarioAnulacionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Contrato");

                    b.Navigation("UsuarioAlta");

                    b.Navigation("UsuarioAnulacion");
                });

            modelBuilder.Entity("Contrato", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Inmueble", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Inquilino", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Propietario", b =>
                {
                    b.Navigation("Inmuebles");
                });

            modelBuilder.Entity("TipoInmueble", b =>
                {
                    b.Navigation("Inmuebles");
                });
#pragma warning restore 612, 618
        }
    }
}
